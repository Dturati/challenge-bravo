version: '3.7'

services:
  back:
    restart: "no"
    build:
        dockerfile: ./docker/back.dockerfile
        context: .
    image: img1
    container_name: back
    ports:
        - "8000:8000"
    expose:
        - 8000
    env_file:
        - dev.env
    tty: true
#    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000
    volumes:
        - ./:/app
#    networks:
#        - dev-network
    depends_on:
        - db
  nginx:
      container_name: web
      restart: unless-stopped
      image: nginx
      volumes:
          - ./nginx/prod/nginx.conf:/etc/nginx/conf.d/default.conf
          - static_volume:/app/static/
          - media_volume:/app/media
      ports:
          - "80:80"
      depends_on:
          - back
#      networks:
#          - dev-network
      tty: true

  db:
      container_name: postgres_container
      image: postgres
      env_file: dev.env
      environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
          PGDATA: /data/postgres
      volumes:
          - postgres_data:/data/postgres
          - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      ports:
          - "5432:5432"
      restart: unless-stopped
#      networks:
#          - dev-network
      tty: true

#networks:
#  dev-network:
#    driver: bridge

volumes:
    static_volume:
    postgres_data:
    media_volume:
